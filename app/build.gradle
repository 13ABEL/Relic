apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-android-extensions"
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.relic"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            dimension "default"

            versionNameSuffix "-dev"
            applicationIdSuffix ".dev"

            resConfigs "en", "xxhdpi"
        }

        // left empty to use Default Config
        prod {
            dimension "default"
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    kapt {
        generateStubs = true
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    def coroutines_ver = "1.1.1"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_ver"
    implementation fileTree(dir: "libs", include: ["*.jar"])

    // region testing
    def mockito_ver = "2.19.0"
    def kMockito_ver ="2.1.0"
    def archTesting_ver = "2.0.0"
    def coroutineTesting_ver = "1.3.0-M1"

    testImplementation "junit:junit:4.12"
    androidTestImplementation "androidx.test:runner:1.1.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.0"

    testImplementation "org.mockito:mockito-core:$mockito_ver"
    testImplementation "androidx.arch.core:core-testing:$archTesting_ver"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineTesting_ver"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$kMockito_ver"

    // endregion testing

    // region android libs
    def android_appcompat_ver = "1.1.0"
    def lifecycle_ver = "2.0.0"
    def room_ver = "2.1.0"
    def work_ver = "2.2.0"
    def pref_ver = "1.1.0"
    def nav_version = "2.1.0"

    // ViewModel and LiveData
    implementation "androidx.appcompat:appcompat:$android_appcompat_ver"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_ver"

    implementation "androidx.exifinterface:exifinterface:1.0.0"

    implementation "androidx.room:room-runtime:$room_ver"
    implementation "androidx.room:room-ktx:$room_ver"
    annotationProcessor "androidx.room:room-compiler:$room_ver"
    kapt "androidx.room:room-compiler:$room_ver"

    implementation "androidx.work:work-runtime-ktx:$work_ver"
    implementation "androidx.preference:preference:$pref_ver"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // endregion android libs

    // region external utility (3rd party) libs
    def timber_ver = "4.7.1"
    def dagger_ver = "2.18"
    def volley = "1.1.0"
    def retrofit_ver = "2.6.0"
    def moshi_ver = "1.8.0"
    def json_simple = "1.1"
    def shopify_livedata_ver = "1.0.1"

    implementation "com.jakewharton.timber:timber:$timber_ver"
    implementation "com.google.dagger:dagger:$dagger_ver"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_ver"

    // dagger
    kapt "com.google.dagger:dagger-compiler:$dagger_ver"
    implementation "com.google.dagger:dagger:$dagger_ver"

    // dagger android
    kapt "com.google.dagger:dagger-android-processor:$dagger_ver"
    implementation "com.google.dagger:dagger-android:$dagger_ver"
    implementation "com.google.dagger:dagger-android-support:$dagger_ver"
    kapt("com.squareup.moshi:moshi-kotlin-codegen:$moshi_ver")

    implementation("com.squareup.moshi:moshi:$moshi_ver")
    implementation("com.squareup.moshi:moshi-adapters:$moshi_ver")

    implementation "com.shopify:livedata-ktx:$shopify_livedata_ver"

    implementation "com.android.volley:volley:$volley"
    implementation "com.googlecode.json-simple:json-simple:$json_simple"

    // GSON for deserializing objects
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_ver"

    // dagger android
    kapt "com.google.dagger:dagger-android-processor:$dagger_ver"
    implementation "com.google.dagger:dagger-android:$dagger_ver"
    implementation "com.google.dagger:dagger-android-support:$dagger_ver"

    kapt("com.squareup.moshi:moshi-kotlin-codegen:$moshi_ver")
    implementation("com.squareup.moshi:moshi:$moshi_ver")
    implementation("com.squareup.moshi:moshi-adapters:$moshi_ver")

    // endregion external utility (3rd party) libs

    // region android view libs

    annotationProcessor "androidx.databinding:databinding-compiler:1.0.0"

    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation "androidx.cardview:cardview:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.0.0"

    // endregion android view libs

    // region 3rd party view libs
    def picasso_ver = "2.71828"
    def photoview_release_ver = "2.0.0"
    def markwon_ver = "3.0.1"
    def gfycat_ver = "0.7.3"

    implementation "com.squareup.picasso:picasso:$picasso_ver"
    implementation "com.github.chrisbanes:PhotoView:$photoview_release_ver"
    implementation "ru.noties.markwon:core:$markwon_ver"
    implementation "com.gfycat.android:gfycat-webp-player:$gfycat_ver"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.40"

    // endregion 3rd partly view libs
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "4000"
            options.compilerArgs << "-Xmaxwarns" << "4000"
        }
    }
}
repositories {
    mavenCentral()
}
